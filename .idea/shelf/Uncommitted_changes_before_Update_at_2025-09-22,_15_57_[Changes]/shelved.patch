Index: src/main/java/translation/CanadaTranslator.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package translation;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\n// TODO Task 1: as a team, update this class so that it also supports the Spanish language code \"es\" and\n//              one more language code of your team's choice. Submit a PR once the code is working and\n//              make sure everyone has a local working copy of the code.\n\n/**\n * An implementation of the Translator interface that translates\n * the country code \"can\" to several languages.\n */\npublic class CanadaTranslator implements Translator {\n\n    public static final String CANADA = \"can\";\n    /**\n     * Return the language code for all languages whose translations are\n     * available for translating \"can\".\n     *\n     * @return list of language codes that are available for translating\n     */\n    @Override\n    public List<String> getLanguageCodes() {\n        return new ArrayList<>(List.of(\"de\", \"en\", \"zh\", \"es\", \"el\"));\n    }\n\n    /**\n     * Return the country codes for all countries whose translations are\n     * available from this translator.\n     *\n     * @return list of country codes for which we have translations available\n     */\n    @Override\n    public List<String> getCountryCodes() {\n        return new ArrayList<>(List.of(CANADA));\n    }\n\n    /**\n     * Return the name of the country based on the specified country code and language code.\n     *\n     * @param countryCode  the 3-letter country code\n     * @param languageCode the 2-letter language code\n     * @return the name of the country in the given language or null if no translation is available\n     */\n    @Override\n    public String translate(String countryCode, String languageCode) {\n        if (!countryCode.equals(CANADA)) {\n            return null;\n        }\n        if (languageCode.equals(\"de\")) {\n            return \"Kanada\";\n        }\n        else if (languageCode.equals(\"en\")) {\n            return \"Canada\";\n        }\n        else if (\"zh\".equals(languageCode)) {\n            return \"加拿大\";\n        }\n        else {\n            return null;\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/translation/CanadaTranslator.java b/src/main/java/translation/CanadaTranslator.java
--- a/src/main/java/translation/CanadaTranslator.java	(revision df59627674e47290b89bdf40e6fbe23424100a31)
+++ b/src/main/java/translation/CanadaTranslator.java	(date 1758570989428)
@@ -22,7 +22,7 @@
      */
     @Override
     public List<String> getLanguageCodes() {
-        return new ArrayList<>(List.of("de", "en", "zh", "es", "el"));
+        return new ArrayList<>(List.of("de", "en", "zh"));
     }
 
     /**
@@ -57,6 +57,12 @@
         else if ("zh".equals(languageCode)) {
             return "加拿大";
         }
+        else if ("es".equals(languageCode)) {
+            return "Canadá";
+        }
+        else if ("el".equals(languageCode)) {
+            return "Καναδάς";
+        }
         else {
             return null;
         }
Index: .idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
--- /dev/null	(date 1758570962494)
+++ b/.idea/.gitignore	(date 1758570962494)
@@ -0,0 +1,8 @@
+# Default ignored files
+/shelf/
+/workspace.xml
+# Editor-based HTTP Client requests
+/httpRequests/
+# Datasource local storage ignored files
+/dataSources/
+/dataSources.local.xml
